{"ast":null,"code":"//frontend\\src\\services\\plant-ai-service.js\n\nimport api from \"./api\";\nconsole.log(\"OpenAI API Key:\", process.env.OPENAI_API_KEY);\n\n/**\n * ดึงรายชื่อสายพันธุ์พืชที่นิยมปลูก\n * @param {number} limit - จำนวนสายพันธุ์ที่ต้องการ\n * @returns {Promise<Array>} - รายชื่อสายพันธุ์พืช\n */\nexport const getPopularPlantSpecies = async (limit = 20) => {\n  const response = await api.get(`/api/plants/species?limit=${limit}`);\n  return response.data;\n};\n\n/**\n * ขอคำแนะนำในการดูแลพืช\n * @param {string} species - ชื่อสายพันธุ์พืช\n * @returns {Promise<string>} - คำแนะนำในการดูแลพืช\n */\nexport const getPlantCareRecommendations = async species => {\n  const response = await api.get(`/api/plants/care-recommendations?species=${encodeURIComponent(species)}`);\n  return response.data.recommendations;\n};\n\n/**\n * บันทึกสายพันธุ์พืชและคำแนะนำ\n * @param {number} plantId - ID ของต้นไม้\n * @param {string} species - ชื่อสายพันธุ์พืช\n * @param {string} careRecommendations - คำแนะนำในการดูแลพืช\n * @returns {Promise<Object>} - ข้อมูลที่อัปเดต\n */\nexport const updatePlantSpecies = async (plantId, species, careRecommendations) => {\n  const response = await api.post(`/api/plants/${plantId}/species`, {\n    species,\n    careRecommendations\n  });\n  return response.data;\n};","map":{"version":3,"names":["api","console","log","process","env","OPENAI_API_KEY","getPopularPlantSpecies","limit","response","get","data","getPlantCareRecommendations","species","encodeURIComponent","recommendations","updatePlantSpecies","plantId","careRecommendations","post"],"sources":["C:/Users/maeki/Desktop/smartpot-application/frontend/src/services/plant-ai-service.js"],"sourcesContent":["//frontend\\src\\services\\plant-ai-service.js\n\nimport api from \"./api\"\nconsole.log(\"OpenAI API Key:\", process.env.OPENAI_API_KEY)\n\n\n/**\n * ดึงรายชื่อสายพันธุ์พืชที่นิยมปลูก\n * @param {number} limit - จำนวนสายพันธุ์ที่ต้องการ\n * @returns {Promise<Array>} - รายชื่อสายพันธุ์พืช\n */\nexport const getPopularPlantSpecies = async (limit = 20) => {\n  const response = await api.get(`/api/plants/species?limit=${limit}`)\n  return response.data\n}\n\n/**\n * ขอคำแนะนำในการดูแลพืช\n * @param {string} species - ชื่อสายพันธุ์พืช\n * @returns {Promise<string>} - คำแนะนำในการดูแลพืช\n */\nexport const getPlantCareRecommendations = async (species) => {\n  const response = await api.get(`/api/plants/care-recommendations?species=${encodeURIComponent(species)}`)\n  return response.data.recommendations\n}\n\n/**\n * บันทึกสายพันธุ์พืชและคำแนะนำ\n * @param {number} plantId - ID ของต้นไม้\n * @param {string} species - ชื่อสายพันธุ์พืช\n * @param {string} careRecommendations - คำแนะนำในการดูแลพืช\n * @returns {Promise<Object>} - ข้อมูลที่อัปเดต\n */\nexport const updatePlantSpecies = async (plantId, species, careRecommendations) => {\n  const response = await api.post(`/api/plants/${plantId}/species`, {\n    species,\n    careRecommendations,\n  })\n  return response.data\n}\n"],"mappings":"AAAA;;AAEA,OAAOA,GAAG,MAAM,OAAO;AACvBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC;;AAG1D;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,sBAAsB,GAAG,MAAAA,CAAOC,KAAK,GAAG,EAAE,KAAK;EAC1D,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,6BAA6BF,KAAK,EAAE,CAAC;EACpE,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,2BAA2B,GAAG,MAAOC,OAAO,IAAK;EAC5D,MAAMJ,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,4CAA4CI,kBAAkB,CAACD,OAAO,CAAC,EAAE,CAAC;EACzG,OAAOJ,QAAQ,CAACE,IAAI,CAACI,eAAe;AACtC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAOC,OAAO,EAAEJ,OAAO,EAAEK,mBAAmB,KAAK;EACjF,MAAMT,QAAQ,GAAG,MAAMR,GAAG,CAACkB,IAAI,CAAC,eAAeF,OAAO,UAAU,EAAE;IAChEJ,OAAO;IACPK;EACF,CAAC,CAAC;EACF,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}