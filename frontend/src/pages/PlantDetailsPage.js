// "use client"

// import { useState, useEffect } from "react"
// import { useParams, useNavigate } from "react-router-dom"
// import api from "../services/api"
// import { useToast } from "../contexts/ToastContext"
// import Header from "../components/layout/Header"
// import PlantInfo from "../components/plants/PlantInfo"
// import PlantActions from "../components/plants/PlantActions"
// // import SensorDataChart from "../components/plants/SensorDataChart" // ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ chart ‡∏ï‡∏≠‡∏ô mock
// import { getPlantCareRecommendations } from "../services/plant-ai-service"

// const PlantDetailsPage = () => {
//   const { id } = useParams()
//   const navigate = useNavigate()
//   const { addToast } = useToast()
//   const [plant, setPlant] = useState(null)
//   const [sensorData, setSensorData] = useState([])
//   const [loading, setLoading] = useState(true)

//   useEffect(() => {
//     const fetchData = async () => {
//       try {
//         // 1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ
//         const plantResponse = await api.get(`/api/plants/${id}`)
//         const plantData = plantResponse.data
//         setPlant(plantData)

//         // 2. ‡∏Ç‡∏≠‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏à‡∏≤‡∏Å AI
//         const careRecommendation = await getPlantCareRecommendations(plantData.species)

//         // 3. ‡∏à‡∏≥‡∏•‡∏≠‡∏á sensor data
//         const mockSensorData = [
//           {
//             timestamp: new Date().toISOString(),
//             moistureLevel: 65,
//             lightLevel: 70,
//             temperature: 27,
//             npkNitrogen: 40,
//             npkPhosphorus: 30,
//             npkPotassium: 20,
//             careRecommendation,
//           }
//         ]

//         setSensorData(mockSensorData)
//       } catch (error) {
//         addToast({
//           title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
//           message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÑ‡∏î‡πâ",
//           type: "error",
//         })
//         navigate("/dashboard")
//       } finally {
//         setLoading(false)
//       }
//     }

//     fetchData()
//   }, [id, navigate, addToast])

//   const handleWater = async () => {
//     try {
//       await api.post(`/api/plants/${id}/activities`, {
//         activityType: "watering",
//         notes: "‡∏£‡∏î‡∏ô‡πâ‡∏≥‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ",
//       })

//       addToast({
//         title: "‡∏£‡∏î‡∏ô‡πâ‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß",
//         message: "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡πÅ‡∏•‡πâ‡∏ß",
//         type: "success",
//       })
//     } catch (error) {
//       addToast({
//         title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
//         message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏î‡∏ô‡πâ‡∏≥‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÑ‡∏î‡πâ",
//         type: "error",
//       })
//     }
//   }

//   const handleFertilize = async () => {
//     try {
//       await api.post(`/api/plants/${id}/activities`, {
//         activityType: "fertilizing",
//         notes: "‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ",
//       })

//       addToast({
//         title: "‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô",
//         message: "‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÉ‡∏™‡πà‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ",
//         type: "success",
//       })
//     } catch (error) {
//       addToast({
//         title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
//         message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÑ‡∏î‡πâ",
//         type: "error",
//       })
//     }
//   }

//   if (loading) {
//     return (
//       <div className="min-h-screen bg-gray-50 flex items-center justify-center">
//         <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>
//       </div>
//     )
//   }

//   return (
//     <div className="min-h-screen bg-gray-50">
//       <Header
//         title={plant.name}
//         showBackButton
//         backTo="/dashboard"
//         showHistoryButton
//         historyTo={`/plants/${id}/history`}
//       />

//       <main className="container mx-auto px-4 py-6">
//         <PlantInfo plant={plant} />

//         <div className="mt-6">
//           <h2 className="text-xl font-semibold mb-4">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå (‡∏à‡∏≥‡∏•‡∏≠‡∏á)</h2>
//           {sensorData.length > 0 ? (
//             <div className="bg-white rounded-lg shadow p-6 text-gray-700 space-y-2">
//               <p>üå± ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡πÉ‡∏ô‡∏î‡∏¥‡∏ô: {sensorData[0].moistureLevel}%</p>
//               <p>üåû ‡πÅ‡∏™‡∏á: {sensorData[0].lightLevel}%</p>
//               <p>üå°Ô∏è ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥: {sensorData[0].temperature}¬∞C</p>
//               <p>üß™ N: {sensorData[0].npkNitrogen}</p>
//               <p>üß™ P: {sensorData[0].npkPhosphorus}</p>
//               <p>üß™ K: {sensorData[0].npkPotassium}</p>
//               <p className="mt-4 text-green-700 font-semibold">
//                 üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏≤‡∏Å AI: {sensorData[0].careRecommendation}
//               </p>
//             </div>
//           ) : (
//             <div className="bg-white rounded-lg shadow p-6 text-center">
//               <p className="text-gray-500">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå</p>
//             </div>
//           )}
//         </div>

//         <PlantActions onWater={handleWater} onFertilize={handleFertilize} />
//       </main>
//     </div>
//   )
// }

// export default PlantDetailsPage















//frontend\src\pages\PlantDetailsPage.js

"use client"

import { useState, useEffect } from "react"
import { useParams, useNavigate } from "react-router-dom"
import api from "../services/api"
import { useToast } from "../contexts/ToastContext"
import Header from "../components/layout/Header"
import PlantInfo from "../components/plants/PlantInfo"
import PlantActions from "../components/plants/PlantActions"
// import SensorDataChart from "../components/plants/SensorDataChart" // ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ chart ‡∏ï‡∏≠‡∏ô mock

// ** ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á import getPlantCareRecommendations ‡∏≠‡∏µ‡∏Å‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ mock data
// import { getPlantCareRecommendations } from "../services/plant-ai-service"

const PlantDetailsPage = () => {
  const { id } = useParams()
  const navigate = useNavigate()
  const { addToast } = useToast()
  const [plant, setPlant] = useState(null)
  const [sensorData, setSensorData] = useState([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    const fetchData = async () => {
      try {
        // 1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ
        const plantResponse = await api.get(`/api/plants/${id}`)
        const plantData = plantResponse.data
        setPlant(plantData)

        // ** 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÅ‡∏ö‡∏ö‡∏à‡∏≥‡∏•‡∏≠‡∏á (Mock AI Recommendation) ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å AI ‡∏à‡∏£‡∏¥‡∏á **
        const mockCareRecommendation = `
        **‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${plantData.species} (‡∏à‡∏≥‡∏•‡∏≠‡∏á):**

        1.  **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡πâ‡∏≥:** ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 60-70% (‡∏£‡∏î‡∏ô‡πâ‡∏≥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏î‡∏¥‡∏ô‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏´‡πâ‡∏á)
        2.  **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏á:** ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 75% (‡πÅ‡∏™‡∏á‡πÅ‡∏î‡∏î‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡∏ñ‡∏∂‡∏á‡πÅ‡∏™‡∏á‡πÅ‡∏î‡∏î‡∏à‡∏±‡∏î ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏£‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏™‡∏á‡πÅ‡∏î‡∏î‡∏à‡∏±‡∏î‡∏ï‡∏£‡∏á‡πÜ ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ö‡πà‡∏≤‡∏¢)
        3.  **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏∏‡πã‡∏¢:** ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 50% (‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢‡∏™‡∏π‡∏ï‡∏£‡πÄ‡∏™‡∏°‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏§‡∏î‡∏π‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï)
        4.  **‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ:**
            * **‡πÉ‡∏ö‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á:** ‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏î‡∏ô‡πâ‡∏≥‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
            * **‡πÅ‡∏°‡∏•‡∏á‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏û‡∏∑‡∏ä:** ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏à‡∏±‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥
        5.  **‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©:**
            * ‡∏Ñ‡∏ß‡∏£‡∏´‡∏°‡∏∏‡∏ô‡∏Å‡∏£‡∏∞‡∏ñ‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏á‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠
            * ‡∏û‡∏£‡∏ß‡∏ô‡∏î‡∏¥‡∏ô‡πÄ‡∏ö‡∏≤‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏≤‡∏¢‡∏≠‡∏≤‡∏Å‡∏≤‡∏®
        `.trim(); // ‡πÉ‡∏ä‡πâ .trim() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏±‡∏ß‡∏ó‡πâ‡∏≤‡∏¢

        // 3. ‡∏à‡∏≥‡∏•‡∏≠‡∏á sensor data (‡πÅ‡∏•‡∏∞‡∏£‡∏ß‡∏° careRecommendation ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢)
        const mockSensorData = [
          {
            timestamp: new Date().toISOString(),
            moistureLevel: 65,
            lightLevel: 70,
            temperature: 27,
            npkNitrogen: 40,
            npkPhosphorus: 30,
            npkPotassium: 20,
            careRecommendation: mockCareRecommendation, // ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏≠‡∏á
          },
        ];

        setSensorData(mockSensorData);
      } catch (error) {
        console.error("Error loading plant details or mock data:", error); // ‡πÄ‡∏û‡∏¥‡πà‡∏° console.error ‡πÄ‡∏û‡∏∑‡πà‡∏≠ debug ‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
        addToast({
          title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
          message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÑ‡∏î‡πâ",
          type: "error",
        });
        navigate("/dashboard");
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, [id, navigate, addToast]);

  const handleWater = async () => {
    try {
      await api.post(`/api/plants/${id}/activities`, {
        activityType: "watering",
        notes: "‡∏£‡∏î‡∏ô‡πâ‡∏≥‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ",
      });

      addToast({
        title: "‡∏£‡∏î‡∏ô‡πâ‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß",
        message: "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡πÅ‡∏•‡πâ‡∏ß",
        type: "success",
      });
    } catch (error) {
      addToast({
        title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
        message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏î‡∏ô‡πâ‡∏≥‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÑ‡∏î‡πâ",
        type: "error",
      });
    }
  };

  const handleFertilize = async () => {
    try {
      await api.post(`/api/plants/${id}/activities`, {
        activityType: "fertilizing",
        notes: "‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ",
      });

      addToast({
        title: "‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô",
        message: "‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÉ‡∏™‡πà‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ",
        type: "success",
      });
    } catch (error) {
      addToast({
        title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
        message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÑ‡∏î‡πâ",
        type: "error",
      });
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>
      </div>
    );
  }
  console.log("Image URL:", plant.imageUrl);

  return (
    <div className="min-h-screen bg-gray-50">
      <Header
        title={plant.name}
        showBackButton
        backTo="/dashboard"
        showHistoryButton
        historyTo={`/plants/${id}/history`}
      />

      <main className="container mx-auto px-4 py-6">
        <PlantInfo plant={plant} />

        <div className="mt-6">
          <h2 className="text-xl font-semibold mb-4">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå (‡∏à‡∏≥‡∏•‡∏≠‡∏á)</h2>
          {sensorData.length > 0 ? (
            <div className="bg-white rounded-lg shadow p-6 text-gray-700 space-y-2">
              <p>üå± ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡πÉ‡∏ô‡∏î‡∏¥‡∏ô: {sensorData[0].moistureLevel}%</p>
              <p>üåû ‡πÅ‡∏™‡∏á: {sensorData[0].lightLevel}%</p>
              <p>üå°Ô∏è ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥: {sensorData[0].temperature}¬∞C</p>
              <p>üß™ N: {sensorData[0].npkNitrogen}</p>
              <p>üß™ P: {sensorData[0].npkPhosphorus}</p>
              <p>üß™ K: {sensorData[0].npkPotassium}</p>
              <p className="mt-4 text-green-700 font-semibold whitespace-pre-line">
                {/* ‡πÉ‡∏ä‡πâ whitespace-pre-line ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà‡∏ï‡∏≤‡∏° \n */}
                üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏≤‡∏Å AI: {sensorData[0].careRecommendation}
              </p>
            </div>
          ) : (
            <div className="bg-white rounded-lg shadow p-6 text-center">
              <p className="text-gray-500">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå</p>
            </div>
          )}
        </div>

        <PlantActions onWater={handleWater} onFertilize={handleFertilize} />
      </main>
    </div>
  );
};

export default PlantDetailsPage;